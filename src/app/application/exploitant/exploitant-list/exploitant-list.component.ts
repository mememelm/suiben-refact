import { Component, OnInit } from '@angular/core';
import { ExploitantService, DomaineService, ModalService } from '../../../services';
import { map } from 'rxjs/operators';
import { MatTableDataSource } from '@angular/material/table';
import { ExploitantDetailComponent } from '../..';
import { DatePipe } from "@angular/common";
import { DatatableLanguage } from "../../../constant/";


@Component({
    selector: 'app-exploitant-list',
    templateUrl: './exploitant-list.component.html',
    styleUrls: ['./exploitant-list.component.css'],
})
export class ExploitantListComponent implements OnInit {

    exploitants: any
    exploitantsListNumber: number
    domaines: any
    data: any

    filteredDataAfterDate: any

    loading: any
    alertLoading: string
    public dtOptions: any = {}

    constructor(
        public exploitantService: ExploitantService,
        public matDialog: ModalService,
        private datePipe: DatePipe,
        private domaineService: DomaineService
    ) { }

    ngOnInit(): void {
        this.dtOptions = {
            language: DatatableLanguage.datatableFrench
        }
        this.loading = true
        this.loadExploitantList();
        this.loadDomaineList()
        if(this.loading == true){
            setTimeout(() => {
                this.alertLoading = 'Vérifiez l\'état de votre connexion internet'
            }, 60000)
        }
    }

    loadExploitantList() {
        this.exploitantService.getExploitantList().snapshotChanges().pipe(
            map(changes => changes.map(c => ({ key: c.payload.key, ...c.payload.val() }))))
            .subscribe(exploitants => {
                this.exploitants = new MatTableDataSource<any>(exploitants)
                console.log('+++exploitant+++', this.exploitants)
                this.exploitantsListNumber = exploitants.length
                this.loading = false
            })
    }

    openDialogDetailsExploitant(arg: any) {
        this.matDialog.openModal(ExploitantDetailComponent, '65%', '75%', { argObjet: arg })
        console.log('graph data', arg)
    }

    onExploitantChange(arg) {
        const exploitantsListObj = [];
        this.exploitantService.getExploitantById(arg).subscribe(
            exploitants => {
                for (var i = 0; i < exploitants.length; i++) {
                    if (exploitants[i] !== undefined)
                        exploitantsListObj.push(exploitants[i])
                }
                this.exploitants = new MatTableDataSource<any>(exploitantsListObj)
                this.exploitantsListNumber = exploitantsListObj.length
            }
        );
    }

    // applyFilter(filterValue: string) {
    //     this.exploitants.filter = filterValue.trim().toLowerCase();
    // }   

    public loadDomaineList() {
        this.domaineService.getDomaineList().snapshotChanges().pipe(
            map(changes => changes.map(c => ({ key: c.payload.key, ...c.payload.val() })))
        ).subscribe(domaines => {
            this.domaines = domaines
        })
    }

    preview() {
        console.log(this.exploitants)
        let printContent = ''
        const WindowObject = window.open('', 'PrintWindow', 'width=750,height=650,top=50,left=50,toolbars=no,scrollbars=yes,status=no,resizable=yes')
        printContent +=
            `<table style="border:1px solid black">
                <thead style="background-color: #007E3A; color:white">
                    <tr>
                        <th>Etat civil</th>
                        <th>Domaine</th>
                        <th>Adhésion</th>
                        <th>Localisation</th> 
                        <th>Activités</th>
                        <th>Spécialité</th>
                    </tr>
                </thead>`;
        this.exploitants.filteredData.map(data => {
            let date = this.datePipe.transform(data.exploitantDate, 'dd MMMM yyyy')
            printContent +=
                `<tbody>
                    <tr style="border:1px solid black; padding: 10px">
                        <td>${data.exploitantFirstName} ${data.exploitantLastName} 
                            <br> ${data.exploitantAge} ans
                        </td>
                        <td>${data.exploitantCedar}</td>
                        <td>${date}</td>
                        <td>${data.exploitantRegion}<br>${data.exploitantDistrict}</td> 
                        <td>${data.exploitantActivite1}<br>${data.exploitantActivite2}</td>
                        <td>${data.exploitantSpeciality1}<br>${data.exploitantSpeciality2}</td>
                    </tr>
                </tbody>`;
            const htmlData = `<html><body>${printContent}</body></html>`

            WindowObject.document.writeln(htmlData)
            WindowObject.document.close()
            WindowObject.focus()
        })

    }
}