import { Component, Inject, OnInit } from '@angular/core';
import { ExploitantService } from '../../../services';
import { MAT_DIALOG_DATA} from '@angular/material/dialog';
import { single } from './data';

@Component({
    selector: 'app-exploitant-detail',
    templateUrl: './exploitant-detail.component.html',
    styleUrls: ['./exploitant-detail.component.css']
})
export class ExploitantDetailComponent implements OnInit {

    public year = new Date().getFullYear();
    public single: any[];

    public formationObj = [];
    public formationObjNbr: number;

    public innoAcquiObj = [];
    public innoAcquiObjNbr: number;

    public innoAppliObj = [];
    public innoAppliObjNbr: number;

    public innoPersoObj = [];
    public innoPersoObjNbr: number;

    public view: any[] = [425, 225];

    // options
    public showXAxis = true;
    public showYAxis = true;
    public gradient = false;
    public showLegend = false;
    public showXAxisLabel = true;
    public showYAxisLabel = true;
    public xAxisLabel = 'AnnÃ©e';
    public yAxisLabel = '%';

    public colorScheme = { domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA'] };

    constructor(
        public exploitantService: ExploitantService,
        @Inject(MAT_DIALOG_DATA) public data: any
    ) {
        Object.assign(this, { single });
    }

    ngOnInit(): void {
        this.exploitantService.formExploitantDetailControl(this.data);

        this.exploitantService.getFormationById(this.data.argObjet.exploitantId)
            .subscribe(data => {
                for (var i = 0; i < data.length; i++) {
                    if (data[i] !== undefined) {
                        for (let j in data[i]) {
                            this.formationObj.push(data[i][j]);
                        }
                    }
                }
                this.formationObjNbr = this.formationObj.length;
            });

        this.exploitantService.getInnovAcquiById(this.data.argObjet.exploitantId)
            .subscribe(data => {
                for (var i = 0; i < data.length; i++) {
                    if (data[i] !== undefined) {
                        for (let j in data[i]) {
                            this.innoAcquiObj.push(data[i][j]);
                        }
                    }
                }
                this.innoAcquiObjNbr = this.innoAcquiObj.length;
            });

        this.exploitantService.getInnovAppliById(this.data.argObjet.exploitantId)
            .subscribe(data => {
                for (var i = 0; i < data.length; i++) {
                    if (data[i] !== undefined) {
                        for (let j in data[i]) {
                            this.innoAppliObj.push(data[i][j]);
                        }
                    }
                }
                this.innoAppliObjNbr = this.innoAppliObj.length;
            });

        this.exploitantService.getInnovPersoById(this.data.argObjet.exploitantId)
            .subscribe(data => {
                for (var i = 0; i < data.length; i++) {
                    if (data[i] !== undefined) {
                        for (let j in data[i]) {
                            this.innoPersoObj.push(data[i][j]);
                        }
                    }
                }
                this.innoPersoObjNbr = this.innoPersoObj.length;
            });
    }
}
